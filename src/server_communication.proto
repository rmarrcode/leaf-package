syntax = "proto3";

package leaftest;

service ServerCommunication {
    rpc GetServerTime (TimeRequest) returns (TimeResponse) {}
    rpc ForwardPass (ForwardPassRequest) returns (ForwardPassResponse) {}
    rpc GetGradients (GradientRequest) returns (GradientResponse) {}
    rpc StoreModelWeights (StoreModelWeightsRequest) returns (StoreModelWeightsResponse) {}
}

message TimeRequest {
    // Empty request
}

message TimeResponse {
    int64 server_time_ms = 1;  // Server time in milliseconds
}

message ForwardPassRequest {
    bytes model_state = 1;  // Serialized model state
    bytes input_data = 2;   // Serialized input tensor data
    bytes target_data = 3;  // Serialized target tensor data
    string model_type = 4;  // Type of model (e.g., "resnet50")
    string criterion_type = 5;  // Type of loss function (e.g., "CrossEntropyLoss")
}

message ForwardPassResponse {
    bytes gradients = 1;  // Serialized gradients
    float loss = 2;       // Loss value
    bool success = 3;     // Whether the operation was successful
    string error_message = 4;  // Error message if failed
}

message GradientRequest {
    bytes model_state = 1;  // Serialized model state
    bytes input_data = 2;   // Serialized input tensor data
    string model_type = 3;  // Type of model
    string criterion_type = 4;  // Type of loss function
}

message GradientResponse {
    bytes gradients = 1;  // Serialized gradients
    float loss = 2;       // Loss value
    bool success = 3;     // Whether the operation was successful
    string error_message = 4;  // Error message if failed
}

message StoreModelWeightsRequest {
    bytes model_state = 1;  // Serialized model state
    string model_id = 2;    // Unique identifier for the model
}

message StoreModelWeightsResponse {
    bool success = 1;     // Whether the operation was successful
    string error_message = 2;  // Error message if failed
    string model_id = 3;  // Echo back the model ID
} 